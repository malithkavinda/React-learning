{"ast":null,"code":"var _jsxFileName = \"F:\\\\testing projects\\\\React-learning\\\\Hooks\\\\use-reducer\\\\src\\\\test_projects\\\\Counter\\\\counter.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTIONS = {\n  INCREMENT: \"increment\",\n  DECREMENT: \"decrement\"\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.INCREMENT:\n      return {\n        count: state.count + 1\n      };\n    case ACTIONS.DECREMENT:\n      return {\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n}\nexport default function Counter() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, {\n    count: 0\n  });\n  function handlePlue(e) {\n    dispatch({\n      type: ACTIONS.INCREMENT\n    });\n  }\n  function handleMinus(e) {\n    dispatch({\n      type: ACTIONS.DECREMENT\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlue,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMinus,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"2CGfLNHHCu3V//t40LY8bCkLvpw=\");\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useReducer","jsxDEV","_jsxDEV","ACTIONS","INCREMENT","DECREMENT","reducer","state","action","type","count","Counter","_s","dispatch","handlePlue","e","handleMinus","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/testing projects/React-learning/Hooks/use-reducer/src/test_projects/Counter/counter.js"],"sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst ACTIONS = {\r\n  INCREMENT: \"increment\",\r\n  DECREMENT: \"decrement\",\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case ACTIONS.INCREMENT:\r\n      return { count: state.count + 1 };\r\n    case ACTIONS.DECREMENT:\r\n      return { count: state.count - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default function Counter() {\r\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\r\n\r\n  function handlePlue(e) {\r\n    dispatch({ type: ACTIONS.INCREMENT });\r\n  }\r\n  function handleMinus(e) {\r\n    dispatch({ type: ACTIONS.DECREMENT });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handlePlue}>+</button>\r\n      {state.count}\r\n      <button onClick={handleMinus}>-</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,OAAO,GAAG;EACdC,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE;AACb,CAAC;AAED,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,OAAO,CAACC,SAAS;MACpB,OAAO;QAAEM,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAG;MAAE,CAAC;IACnC,KAAKP,OAAO,CAACE,SAAS;MACpB,OAAO;QAAEK,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAG;MAAE,CAAC;IACnC;MACE,OAAOH,KAAK;EAChB;AACF;AAEA,eAAe,SAASI,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGb,UAAU,CAACM,OAAO,EAAE;IAAEI,KAAK,EAAE;EAAE,CAAC,CAAC;EAE3D,SAASI,UAAUA,CAACC,CAAC,EAAE;IACrBF,QAAQ,CAAC;MAAEJ,IAAI,EAAEN,OAAO,CAACC;IAAU,CAAC,CAAC;EACvC;EACA,SAASY,WAAWA,CAACD,CAAC,EAAE;IACtBF,QAAQ,CAAC;MAAEJ,IAAI,EAAEN,OAAO,CAACE;IAAU,CAAC,CAAC;EACvC;EAEA,oBACEH,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAQgB,OAAO,EAAEJ,UAAW;MAAAG,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtCf,KAAK,CAACG,KAAK,eACZR,OAAA;MAAQgB,OAAO,EAAEF,WAAY;MAAAC,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAACV,EAAA,CAjBuBD,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}