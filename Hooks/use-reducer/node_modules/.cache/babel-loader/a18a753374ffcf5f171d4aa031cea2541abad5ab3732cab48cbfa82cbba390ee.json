{"ast":null,"code":"var _jsxFileName = \"F:\\\\testing projects\\\\React-learning\\\\Hooks\\\\use-reducer\\\\src\\\\test_projects\\\\Todo_app\\\\todo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Todo() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editIndex, setEditIndex] = useState(null); // Track the index being edited\n  const [newEditableInput, setNewEditableInput] = useState(\"\"); // Store edited input\n\n  function addTodos() {\n    if (inputValue.trim() === \"\") return; // Prevent empty todos\n    setTodos([...todos, inputValue]);\n    setInputValue(\"\");\n  }\n  function removeHandler(index) {\n    const selectedTodos = todos.filter((_, loopIndex) => loopIndex !== index);\n    setTodos(selectedTodos);\n  }\n  function editHandler(index) {\n    setEditIndex(index); // Set the item being edited\n    setNewEditableInput(todos[index]); // Pre-fill with existing value\n  }\n  function saveEdit(index) {\n    const updatedTodos = [...todos];\n    updatedTodos[index] = newEditableInput; // Update with new value\n    setTodos(updatedTodos);\n    setEditIndex(null); // Exit edit mode\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"input_todo\",\n      onChange: e => setInputValue(e.target.value),\n      value: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodos,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"10px\"\n        },\n        children: editIndex === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEditableInput,\n            onChange: e => setNewEditableInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => saveEdit(index),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeHandler(index),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editHandler(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"TDIELTSKVplwnJO9PEPnPtqqG54=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","todos","setTodos","inputValue","setInputValue","editIndex","setEditIndex","newEditableInput","setNewEditableInput","addTodos","trim","removeHandler","index","selectedTodos","filter","_","loopIndex","editHandler","saveEdit","updatedTodos","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","e","target","value","onClick","map","todo","style","display","alignItems","gap","_c","$RefreshReg$"],"sources":["F:/testing projects/React-learning/Hooks/use-reducer/src/test_projects/Todo_app/todo.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Todo() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [editIndex, setEditIndex] = useState(null); // Track the index being edited\r\n  const [newEditableInput, setNewEditableInput] = useState(\"\"); // Store edited input\r\n\r\n  function addTodos() {\r\n    if (inputValue.trim() === \"\") return; // Prevent empty todos\r\n    setTodos([...todos, inputValue]);\r\n    setInputValue(\"\");\r\n  }\r\n\r\n  function removeHandler(index) {\r\n    const selectedTodos = todos.filter((_, loopIndex) => loopIndex !== index);\r\n    setTodos(selectedTodos);\r\n  }\r\n\r\n  function editHandler(index) {\r\n    setEditIndex(index); // Set the item being edited\r\n    setNewEditableInput(todos[index]); // Pre-fill with existing value\r\n  }\r\n\r\n  function saveEdit(index) {\r\n    const updatedTodos = [...todos];\r\n    updatedTodos[index] = newEditableInput; // Update with new value\r\n    setTodos(updatedTodos);\r\n    setEditIndex(null); // Exit edit mode\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todos</h1>\r\n      <input\r\n        type=\"text\"\r\n        name=\"input_todo\"\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        value={inputValue}\r\n      />\r\n      <button onClick={addTodos}>Add</button>\r\n\r\n      <ul>\r\n        {todos.map((todo, index) => (\r\n          <div key={index} style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\r\n            {editIndex === index ? (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newEditableInput}\r\n                  onChange={(e) => setNewEditableInput(e.target.value)}\r\n                />\r\n                <button onClick={() => saveEdit(index)}>Save</button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li>{todo}</li>\r\n                <button onClick={() => removeHandler(index)}>X</button>\r\n                <button onClick={() => editHandler(index)}>Edit</button>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}